// Code generated by "go-stringer -type=AnimeFieldType -trimprefix=AnimeFieldType -output field_anime_string.go -nametransform=snake_case_lower -fromstringgenfn -marshaljson -marshalqs -marshalqspkg=github.com/dmji/qs -outputtransform=snake_case_lower"; DO NOT EDIT.

package mal_prm

import (
	json "encoding/json"
	"errors"
	qs "github.com/dmji/qs"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AnimeFieldTypeID-0]
	_ = x[AnimeFieldTypeTitle-1]
	_ = x[AnimeFieldTypeMainPicture-2]
	_ = x[AnimeFieldTypeAlternativeTitles-3]
	_ = x[AnimeFieldTypeStartDate-4]
	_ = x[AnimeFieldTypeEndDate-5]
	_ = x[AnimeFieldTypeSynopsis-6]
	_ = x[AnimeFieldTypeMean-7]
	_ = x[AnimeFieldTypeRank-8]
	_ = x[AnimeFieldTypePopularity-9]
	_ = x[AnimeFieldTypeNumListUsers-10]
	_ = x[AnimeFieldTypeNumScoringUsers-11]
	_ = x[AnimeFieldTypeNSFW-12]
	_ = x[AnimeFieldTypeCreatedAt-13]
	_ = x[AnimeFieldTypeUpdatedAt-14]
	_ = x[AnimeFieldTypeMediaType-15]
	_ = x[AnimeFieldTypeStatus-16]
	_ = x[AnimeFieldTypeGenres-17]
	_ = x[AnimeFieldTypeMyListStatus-18]
	_ = x[AnimeFieldTypeNumEpisodes-19]
	_ = x[AnimeFieldTypeStartSeason-20]
	_ = x[AnimeFieldTypeBroadcast-21]
	_ = x[AnimeFieldTypeSource-22]
	_ = x[AnimeFieldTypeAverageEpisodeDuration-23]
	_ = x[AnimeFieldTypeRating-24]
	_ = x[AnimeFieldTypePictures-25]
	_ = x[AnimeFieldTypeBackground-26]
	_ = x[AnimeFieldTypeRelatedAnime-27]
	_ = x[AnimeFieldTypeRelatedManga-28]
	_ = x[AnimeFieldTypeRecommendations-29]
	_ = x[AnimeFieldTypeStudios-30]
	_ = x[AnimeFieldTypeStatistics-31]
	_ = x[AnimeFieldTypeListStatus-32]
	_ = x[AnimeFieldTypeNode-33]
}

const _AnimeFieldType_name = "idtitlemain_picturealternative_titlesstart_dateend_datesynopsismeanrankpopularitynum_list_usersnum_scoring_usersnsfwcreated_atupdated_atmedia_typestatusgenresmy_list_statusnum_episodesstart_seasonbroadcastsourceaverage_episode_durationratingpicturesbackgroundrelated_animerelated_mangarecommendationsstudiosstatisticslist_statusnode"

var _AnimeFieldType_index = [...]uint16{0, 2, 7, 19, 37, 47, 55, 63, 67, 71, 81, 95, 112, 116, 126, 136, 146, 152, 158, 172, 184, 196, 205, 211, 235, 241, 249, 259, 272, 285, 300, 307, 317, 328, 332}

func (i AnimeFieldType) String() string {
	if i >= AnimeFieldType(len(_AnimeFieldType_index)-1) {
		return "AnimeFieldType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AnimeFieldType_name[_AnimeFieldType_index[i]:_AnimeFieldType_index[i+1]]
}
func AnimeFieldTypeFromString(s string) (AnimeFieldType, error) {
	for i := 0; i < 34; i++ {
		if e := AnimeFieldType(i + 0); s == e.String() {
			return e, nil
		}
	}
	return AnimeFieldType(0), errors.New("cannot deternime AnimeFieldType from string")
}

func (e AnimeFieldType) MarshalQS(opts *qs.MarshalOptions) ([]string, error) {
	return []string{e.String()}, nil
}

func (e *AnimeFieldType) UnmarshalQS(a []string, opts *qs.UnmarshalOptions) error {
	s, err := opts.SliceToString(a)
	if err != nil {
		return err
	}
	*e, err = AnimeFieldTypeFromString(s)
	return err
}
func (e AnimeFieldType) MarshalJSON() ([]byte, error) {
	return json.Marshal(e.String())
}

func (e *AnimeFieldType) UnmarshalJSON(data []byte) error {
	var s string
	err := json.Unmarshal(data, &s)
	if err != nil {
		return err
	}

	*e, err = AnimeFieldTypeFromString(s)
	return err
}
